SELECT * FROM CUSTOMER_PERSONAL_INFO_2605;
SELECT * FROM CUSTOMER_REFERENCE_INFO_2605;
SELECT * FROM BANK_INFO_2605;
SELECT * FROM ACCOUNT_INFO_2605;


--1. BANKING MANAGEMENT SYSTEM. Write a PL/SQL block to CONVERT THE SALARY ACCOUNT TYPE TO SAVINGS ACCOUNT FOR THE GIVEN CUSTOMER ID.
BEGIN
    UPDATE ACCOUNT_INFO_2605
    SET ACCOUNT_TYPE = 'SAVINGS'
    WHERE ACCOUNT_TYPE = 'SALARY'
    AND CUSTOMER_ID='&CUSTOMER_ID';
    IF SQL%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
    ELSE
        DBMS_OUTPUT.PUT_LINE('RECORD NOT FOUND');
    END IF;
END;


--2. BMS - TO CHANGE THE IFSC OF  ICICI OF TNAGAR
BEGIN
    UPDATE BANK_INFO_2605
    SET IFSC_CODE = 'ICITN0456'
    WHERE BRANCH_NAME = 'TNAGAR'
    AND BANK_NAME='ICICI';
END;

--3. WRITE A BLOCK TO INITIATE FUND TRANSFER FOR USER TO BENEFICIARY USER

--4. WRITE A BLOCK WHO AVAILS DISCOUNT BASED ON TRANSACTION ON SAME BANKING TRANSACTIONS

--5. WRITE A BLOCK TO LIST THE SENIOR CITIZEN - ACCOUNT HOLDERS 
DECLARE 
      CURSOR A IS
      SELECT CUSTOMER_ID
      FROM ACCOUNT_INFO_2605
      WHERE TO_CHAR(ACTIVATION_DATE,'YYYY')+5<=TO_CHAR(SYSDATE,'YYYY') ;
      NAME_1 CUSTOMER_PERSONAL_INFO_2605.CUSTOMER_NAME%TYPE;
      
BEGIN
    OPEN A;
    LOOP
    FETCH A
    INTO NAME_1;
    EXIT WHEN A%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(NAME_1 );
    END LOOP;
    CLOSE A;
END;


--6. WRITE A BLOCK TO CHANGE THE ACCOUNT HOLDERS BRANCH.(INCLUDING IFSC) FOR THE GIVEN ACCOUNT HOLDER
BEGIN
    UPDATE ACCOUNT_INFO_2605
    SET IFSC_CODE = 'ICITN0456'
    WHERE CUSTOMER_ID='&CUSTOMER_ID';
END;

--7. WRITE A BLOCK TO CHECK THE ACCOUNT HOLDER NAME AND TO ADD THE NOMIEE NAME 
--FOR THE SENIOR CITIZEN - AFTER 10 YEARS OF ACCOUNT OPENING YEAR
--(EXTRACT SENIOR CITIZEN LIST,
--EXTRACT THE YEAR OF ACCOUNT OPENING,
--CREATE TABLE TO MAP NOMINEE NAME AND SENIOR CITIZEN PK,
--ADD THE NOMINEE NAME)

--8. DISPLAY THE NAME OF THE EMPLOYEES AND THE NUMBER OF RECORDS USING CURSOR AND CURSOR LOOP
DECLARE 
      CURSOR E IS
      SELECT FIRST_NAME
      FROM employees_21;
      NAME_1 employees_21.FIRST_NAME%TYPE;
      NO_OF_ROWS  NUMBER(10) :=0;
BEGIN
    OPEN E;
    LOOP
    FETCH E
    INTO NAME_1;
    EXIT WHEN E%NOTFOUND;
    NO_OF_ROWS := NO_OF_ROWS+1;
    DBMS_OUTPUT.PUT_LINE(NAME_1 );
    END LOOP;
    DBMS_OUTPUT.PUT_LINE(NO_OF_ROWS);
    CLOSE E;
END;

--9. Write a procedure to increase the salary of all the employees by 5000 using FORALL.

CREATE OR REPLACE PROCEDURE adjust_salary(
    in_employee_id employees_21.Employee_ID%TYPE  
)
IS
r_salary employees_21%ROWTYPE;
BEGIN
    UPDATE employees_21
    SET SALARY = SALARY+'5000'
    WHERE EMPLOYEE_ID=in_employee_id;
    IF SQL%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('RECORD UPDATED');
    ELSE
        DBMS_OUTPUT.PUT_LINE('RECORD NOT FOUND');
    END IF;
END;
